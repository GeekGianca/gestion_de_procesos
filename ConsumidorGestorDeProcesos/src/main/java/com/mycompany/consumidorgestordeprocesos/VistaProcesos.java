/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.consumidorgestordeprocesos;

import com.mycompany.consumidorgestordeprocesos.hilos.HiloProcesos;
import com.mycompany.consumidorgestordeprocesos.modelo.ProcesoGestionado;
import com.mycompany.consumidorgestordeprocesos.rest.ProcesosRest;
import java.awt.HeadlessException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geek-Programmer
 */
public class VistaProcesos extends javax.swing.JFrame {

    LinkedList<ProcesoGestionado> cola = new LinkedList<>();
    LinkedList<ProcesoGestionado> terminados = new LinkedList<>();
    ProcesosRest rest = new ProcesosRest();
    boolean tieneProcesos = false;
    int posicion = 0;
    HiloProcesos hilo;
    boolean reaunudar = false;
    boolean termino = false;
    int cantidadProcesos = 0;

    /**
     * Creates new form VistaProcesos
     */
    public VistaProcesos() {
        initComponents();
        this.tiempoHilo.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                cambio();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                cambio();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                cambio();
            }

            public void cambio() {
                if (tiempoHilo.getText().length() > 0) {
                    btnIniciar.setEnabled(true);
                    Utilidad.tiempoHilo = Long.parseLong(tiempoHilo.getText());
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProcesos = new javax.swing.JTable();
        btnDescargar = new javax.swing.JButton();
        tiempoHilo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        progresoBarra = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        procesosEjecutados = new javax.swing.JTable();
        btnIniciar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        procentajeProgreso = new javax.swing.JLabel();
        noProceso = new javax.swing.JLabel();
        mostrarGrafica = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Sistemas Operativos Gestor De Procesos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(294, 294, 294))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        tablaProcesos.setBackground(new java.awt.Color(255, 255, 255));
        tablaProcesos.setForeground(new java.awt.Color(0, 0, 0));
        tablaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pid", "Nombre", "Usuario", "Prioridad", "Rafaga", "R.Rafaga", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProcesos.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tablaProcesos);

        btnDescargar.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        btnDescargar.setText("Encolar Procesos(WS)");
        btnDescargar.setFocusPainted(false);
        btnDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Tiempo Hilo:");

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Procesos Ejecutados:");

        procesosEjecutados.setBackground(new java.awt.Color(255, 255, 255));
        procesosEjecutados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        procesosEjecutados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        procesosEjecutados.setForeground(new java.awt.Color(0, 0, 0));
        procesosEjecutados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pid", "Proceso", "Tiempo Llegada", "Rafaga", "Prioridad", "Turn Around", "Tiempo Finalizacion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(procesosEjecutados);

        btnIniciar.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.setEnabled(false);
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnDetener.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        btnDetener.setText("Detener");
        btnDetener.setEnabled(false);
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });

        procentajeProgreso.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        procentajeProgreso.setForeground(new java.awt.Color(0, 0, 0));
        procentajeProgreso.setText("0%");

        noProceso.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        noProceso.setForeground(new java.awt.Color(0, 0, 0));
        noProceso.setText("#");

        mostrarGrafica.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        mostrarGrafica.setText("Mostrar Grafica");
        mostrarGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarGraficaActionPerformed(evt);
            }
        });

        limpiar.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(progresoBarra, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                            .addComponent(btnDescargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(procentajeProgreso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(noProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDetener, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tiempoHilo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mostrarGrafica)
                                .addGap(719, 719, 719)
                                .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(18, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDescargar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tiempoHilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(21, 21, 21)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(progresoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(procentajeProgreso)
                                .addComponent(noProceso))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDetener, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostrarGrafica)
                    .addComponent(limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarActionPerformed
        try {
            rest.findAll().getListaProcesos().forEach((proceso) -> {
                if (proceso != null) {
                    int rafaga = capturarRafaga(proceso.getDescripcion());
                    ProcesoGestionado pg = new ProcesoGestionado();
                    pg.capturarProcesosRest(proceso);
                    pg.setPrioridad(proceso.getPrioridad());
                    pg.setRafaga(rafaga);
                    pg.setResiduoRafa(rafaga);
                    pg.setUsuario(proceso.getUsuario());
                    pg.setPosicion(posicion);
                    pg.setCaracteres(proceso.getDescripcion());
                    pg.setCaracter(proceso.getDescripcion());
                    cola.addLast(pg);
                    DefaultTableModel modelo = (DefaultTableModel) tablaProcesos.getModel();
                    Object[] datos = new Object[7];
                    datos[0] = proceso.getPid();
                    datos[1] = proceso.getNombre();
                    datos[2] = proceso.getUsuario();
                    datos[3] = (proceso.getPrioridad() == 1) ? "No expulsivo" : "Expulsivo";
                    datos[4] = rafaga;//Rafaga
                    datos[5] = rafaga;//Residuo rafaga
                    datos[6] = "Listo";
                    modelo.addRow(datos);
                    tablaProcesos.setModel(modelo);
                    Utilidad.quantum = 5;//No se definio un quantum en los requerimientos, por ende el quantum sera de 5
                    posicion++;
                }
            });
            if (cola.size() > -1) {
                tieneProcesos = true;
                btnDescargar.setEnabled(!tieneProcesos);
            } else {
                tieneProcesos = false;
                btnDescargar.setEnabled(!tieneProcesos);
                JOptionPane.showMessageDialog(this, "No existen procesos para descargar", "Sin Procesos Disponibles", JOptionPane.WARNING_MESSAGE);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "No se detecto un socket para la descarga\n" + e.getMessage(), "Sin Conexion", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "No se detecto un socket para la descarga\n" + ex.getMessage(), "Sin Conexion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDescargarActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        if (!reaunudar) {
            hilo = new HiloProcesos(cola, terminados, procesosEjecutados, tablaProcesos, progresoBarra, noProceso, procentajeProgreso, termino);
            Thread t = new Thread(hilo);
            t.start();
            btnIniciar.setEnabled(false);
            btnDetener.setEnabled(true);
        } else {
            hilo.resumir();
            btnIniciar.setEnabled(false);
            btnDetener.setEnabled(true);
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed
        hilo.suspendido();
        reaunudar = true;
        btnDetener.setEnabled(false);
        btnIniciar.setEnabled(true);
    }//GEN-LAST:event_btnDetenerActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        if (hilo.isTermino()) {
            tablaProcesos = new javax.swing.JTable();

            tablaProcesos.setBackground(new java.awt.Color(255, 255, 255));

            tablaProcesos.setForeground(new java.awt.Color(0, 0, 0));

            tablaProcesos.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Pid", "Nombre", "Rafaga", "R.Rafaga", "Estado"
                    }
            ) {
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false
                };

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

            tablaProcesos.setGridColor(new java.awt.Color(0, 0, 0));

            jScrollPane1.setViewportView(tablaProcesos);

            procesosEjecutados = new javax.swing.JTable();

            procesosEjecutados.setBackground(new java.awt.Color(255, 255, 255));

            procesosEjecutados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

            procesosEjecutados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

            procesosEjecutados.setForeground(new java.awt.Color(0, 0, 0));

            procesosEjecutados.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Pid", "Proceso", "Tiempo Llegada", "Rafaga", "Prioridad", "Turn Around", "Tiempo Finalizacion"
                    }
            ) {
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
                };

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

            jScrollPane2.setViewportView(procesosEjecutados);
        } else {
            JOptionPane.showMessageDialog(this, "No se han ejecutado los procesos completamente", "Espere", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_limpiarActionPerformed

    private void mostrarGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarGraficaActionPerformed
        if (hilo.isTermino()) {
            new Grafico(terminados).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se han ejecutado los procesos completamente", "Espere", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_mostrarGraficaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VistaProcesos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescargar;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton mostrarGrafica;
    private javax.swing.JLabel noProceso;
    private javax.swing.JLabel procentajeProgreso;
    private javax.swing.JTable procesosEjecutados;
    private javax.swing.JProgressBar progresoBarra;
    private javax.swing.JTable tablaProcesos;
    private javax.swing.JTextField tiempoHilo;
    // End of variables declaration//GEN-END:variables

    private int capturarRafaga(String caracteres) {
        return caracteres.length();
    }

}
